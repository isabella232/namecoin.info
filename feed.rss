<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Namecoin</title>
    <description><!--Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
--></description>
    <link>https://www.namecoin.org//</link>
    <atom:link href="https://www.namecoin.org//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 28 Feb 2020 09:07:24 +0000</pubDate>
    <lastBuildDate>Fri, 28 Feb 2020 09:07:24 +0000</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Electrum-NMC: ETA Display for Name Registrations</title>
        <description>&lt;p&gt;Recently, I was put in contact (via a mutual friend) with a new Namecoin user, Forest Johnson, who was having some trouble registering a name with Electrum-NMC.  Unlike typical software users, who tend to give up when encountering issues, Forest was kind enough to provide &lt;a href=&quot;https://www.sequentialread.com/how-to-register-a-namecoin-bit-domain-with-electrum-nmc/&quot;&gt;some excellent UX review&lt;/a&gt; of Electrum-NMC.  One piece of that UX review was that it’s not obvious to a user that registering a name is a two-step process, and that the latter step can’t proceed until the former step has 12 confirmations.  So, I’ve added an ETA indicator for name registrations to the Manage Names tab.  Check it out:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/electrum-nmc/2020-02-20-Registration-ETA.png&quot; alt=&quot;A screenshot of the Manage Names tab in Electrum-NMC showing &amp;quot;ETA 130min&amp;quot;.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Forest provided quite a bit of additional UX review; I intend to address those points in the future.  Thanks Forest for making Namecoin better!&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/02/27/electrum-nmc-name-registration-eta-display.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/02/27/electrum-nmc-name-registration-eta-display.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Tor 0.4.3.1-alpha Released; Includes Namecoin Stream Isolation Patch</title>
        <description>&lt;p&gt;The Tor Project has &lt;a href=&quot;https://blog.torproject.org/node/1828&quot;&gt;released&lt;/a&gt; Tor 0.4.3.1-alpha.  Among the usual interesting changes, Namecoin users will be interested to note that Tor 0.4.3.1-alpha includes &lt;a href=&quot;/2019/12/09/stream-isolation-for-namecoin-name-lookups.html&quot;&gt;Namecoin’s stream isolation patch for Tor controllers such as StemNS&lt;/a&gt;, which paves the way for better Namecoin resolution support for Tor.  Kudos to The Tor Project on getting Tor 0.4.3.1-alpha released!&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund and Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/01/26/tor-0.4.3.1-alpha-released-includes-namecoin-stream-isolation-patch.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/01/26/tor-0.4.3.1-alpha-released-includes-namecoin-stream-isolation-patch.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>ncdns v0.0.10.3 Released</title>
        <description>&lt;p&gt;We’ve released ncdns v0.0.10.3.  Here’s what’s new since v0.0.9.2:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DNSSEC-HSTS:
    &lt;ul&gt;
      &lt;li&gt;Support Chromium and Google Chrome (patch by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;madns:
    &lt;ul&gt;
      &lt;li&gt;Support stream isolation via EDNS0 (patch by Jeremy Rand, merged by Hugo Landau).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ncdns:
    &lt;ul&gt;
      &lt;li&gt;Support stream isolation via EDNS0 (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Use modern btcd for JSON-RPC client (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Make TLSA support disableable at build time (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Documentation improvements (patches by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Code quality improvements (patches by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ncdumpzone:
    &lt;ul&gt;
      &lt;li&gt;Fix infinite loop when dumping with Namecoin Core 0.18.0 and higher (patch by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ncprop279:
    &lt;ul&gt;
      &lt;li&gt;Add “Only Onion mode” (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Support stream isolation via EDNS0 (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Use modern btcd for JSON-RPC client (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Make TLSA support disableable at build time (patch by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Code quality improvements (patches by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;qlib:
    &lt;ul&gt;
      &lt;li&gt;Fix build error on current Go compiler versions (patch by Zigmund, merged upstream by Miek Gieben).&lt;/li&gt;
      &lt;li&gt;Support configurable timeouts (patch by Jeremy Rand, merged upstream by Miek Gieben).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;tlsrestrictnss:
    &lt;ul&gt;
      &lt;li&gt;Code quality improvements (patch by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;x509-signature-splice:
    &lt;ul&gt;
      &lt;li&gt;Support multiple Go compiler versions (patch by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Build system:
    &lt;ul&gt;
      &lt;li&gt;Bump rbm dependencies to latest releases (patches by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Bump NSIS dependencies to latest releases (patches by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Code quality improvements (patches by Jeremy Rand).&lt;/li&gt;
      &lt;li&gt;Build reproducibility improvements (patches by Jeremy Rand).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#ncdns&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund and Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/01/16/ncdns-v0.0.10.3-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/01/16/ncdns-v0.0.10.3-released.html</guid>
        
        <category>Releases</category>
        
        <category>ncdns Releases</category>
        
        
      </item>
    
      <item>
        <title>Video of Daniel Kraft at CloudFest 2019</title>
        <description>&lt;p&gt;As was &lt;a href=&quot;/2019/03/25/cloudfest-2019.html&quot;&gt;previously announced&lt;/a&gt;, Daniel Kraft represented Namecoin at &lt;a href=&quot;https://www.cloudfest.com/agenda&quot;&gt;CloudFest 2019&lt;/a&gt;.  Here is the video of Daniel’s talk:&lt;/p&gt;

&lt;h2 id=&quot;what-the-cryptocurrency-boom-missed-the-namecoin-story&quot;&gt;What The Cryptocurrency Boom Missed: The Namecoin Story&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;To hear Daniel Kraft, the lead engineer of Namecoin, say it – “Bitcoin frees money, Namecoin frees DNS, identities, and other information”. Namecoin is the second oldest cryptocurrency after Bitcoin, but it is more than that. It builds a naming system that is decentralised, trustless, secure and has human-readable names. As such, it is the world’s first solution to “Zooko’s triangle”. Applications range from secure management of online identities and cryptographic keys and a decentralised alternative to the DNS and the certificate-authority infrastructure to fully decentralised multiplayer online games. Find out why cryptocurrency technology is so much more than merely an investment, and discover how it is being employed to put greater privacy and security tools into the hands of consumers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=qibDWsiwxY0&quot;&gt;Video recording is here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The video recording can be viewed via &lt;a href=&quot;https://rg3.github.io/youtube-dl/&quot;&gt;youtube-dl&lt;/a&gt; (&lt;a href=&quot;https://packages.debian.org/buster/youtube-dl&quot;&gt;Debian package&lt;/a&gt;) (&lt;a href=&quot;https://forums.whonix.org/t/vlc-apparmor-profile-wip-streaming-documentation-for-whonix-install-youtube-dl-by-default/2918&quot;&gt;recommendation by Whonix&lt;/a&gt;) if you don’t trust YouTube’s JavaScript (and there’s no reason why you should trust YouTube’s JavaScript!).&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/01/13/cloudfest-2019-video.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/01/13/cloudfest-2019-video.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>36C3 Summary</title>
        <description>&lt;p&gt;As was &lt;a href=&quot;/2019/12/20/36c3.html&quot;&gt;previously announced&lt;/a&gt;, I (Jeremy Rand) represented Namecoin at &lt;a href=&quot;https://events.ccc.de/congress/2019/wiki/index.php/Main_Page&quot;&gt;36C3&lt;/a&gt; in Leipzig, Germany.  As usual, it was an excellent event.  As usual for conferences that I attend, I engaged in a large number of conversations with other attendees.  Also as usual, I won’t be publicly disclosing the content of those conversations, because I want people to be able to talk to me at conferences without worrying that off-the-cuff comments will be broadcast to the public.&lt;/p&gt;

&lt;p&gt;Namecoin gave 2 talks, as well as a workshop, all of which were hosted by the Monero Assembly and the Critical Decentralization Cluster (CDC).  Here are the slides and videos of Namecoin’s talks, as well as the notes from Namecoin’s workshop:&lt;/p&gt;

&lt;h2 id=&quot;lightning-talk-intro-to-namecoin&quot;&gt;Lightning Talk: Intro to Namecoin&lt;/h2&gt;

&lt;p&gt;Speaker: Jeremy Rand&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Namecoin is a blockchain (first project forked from Bitcoin) that implements a decentralized DNS and public key infrastructure, which is resistant to censorship, hijacking, and other tampering. This talk will explain the basics of how Namecoin works and what it can be used for.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/resources/presentations/36C3/Namecoin_Introduction_36C3_CDC.pdf&quot;&gt;Slides are here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/Xu_QH6oi7oA?t=4763&quot;&gt;Video is here.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;lecture-adventures-and-experiments-adding-namecoin-to-tor-browser&quot;&gt;Lecture: Adventures and Experiments Adding Namecoin to Tor Browser&lt;/h2&gt;

&lt;p&gt;Speaker: Jeremy Rand&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Namecoin and Tor developers are running a new experiment: the GNU/Linux Nightly Builds of Tor Browser now have optional support for resolving Namecoin’s .bit domains. This experiment aims to provide a fix for the long-standing UX problem with .onion domains: the lack of human-meaningful names. With Namecoin, you can access onion services via nice, memorable addresses like http://federalistpapers.bit/ instead of http://7fa6xlti5joarlmkuhjaifa47ukgcwz6tfndgax45ocyn4rixm632jid.onion/ . In this talk, I’ll cover the goals of the experiment, the work that went into getting here, and the work that remains to be done.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Disclaimer: Although the work covered in this talk is a collaboration between Namecoin and Tor, this talk is solely from Namecoin’s perspective.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/resources/presentations/36C3/Adventures_and_Experiments_Adding_Namecoin_to_Tor_Browser_36C3_CDC.pdf&quot;&gt;Slides are here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/mc51zyflpa8?t=22638&quot;&gt;Video is here.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;workshop-demo-and-discussion-namecoin-in-tor-browser&quot;&gt;Workshop: Demo and Discussion: Namecoin in Tor Browser&lt;/h2&gt;

&lt;p&gt;Workshop Host: Jeremy Rand&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Namecoin and Tor developers are running a new experiment: the GNU/Linux Nightly Builds of Tor Browser now have optional support for resolving Namecoin’s .bit domains. This experiment aims to provide a fix for the long-standing UX problem with .onion domains: the lack of human-meaningful names. With Namecoin, you can access onion services via nice, memorable addresses like http://federalistpapers.bit/ instead of http://7fa6xlti5joarlmkuhjaifa47ukgcwz6tfndgax45ocyn4rixm632jid.onion/ . In this workshop, you’ll be able to try it out yourself. Bring a GNU/Linux machine (bare-metal or VM are both fine). After the demo, I’d love your feedback on what our next steps should be in this area.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I highly recommend attending my talk “Adventures and Experiments Adding Namecoin to Tor Browser” prior to this workshop, but this is not a hard requirement; attendees who didn’t attend that talk are still welcome.&lt;/p&gt;

&lt;p&gt;Disclaimer: Although the work covered in this workshop is a collaboration between Namecoin and Tor, this workshop is solely from Namecoin’s perspective.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/resources/presentations/36C3/tor-workshop/&quot;&gt;Notes are here.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks&lt;/h2&gt;

&lt;p&gt;Huge thank you to the following groups who facilitated our participation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Monero Assembly&lt;/li&gt;
  &lt;li&gt;The Critical Decentralization Cluster&lt;/li&gt;
  &lt;li&gt;Replicant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’re looking forward to 37C3 in December 2020!&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund and Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/01/11/36c3-summary.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/01/11/36c3-summary.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Core 0.19.0.1 Released</title>
        <description>&lt;p&gt;Namecoin Core 0.19.0.1 has been released on the &lt;a href=&quot;/download/#namecoin-core-client-stable-release&quot;&gt;Downloads page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s what’s new since 0.18.0:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The mempool now allows multiple updates of a single name (in a chain of transactions). This is something that is allowed in blocks already, i.e. it is just a policy change. The &lt;code class=&quot;highlighter-rouge&quot;&gt;name_update&lt;/code&gt; RPC command still prevents such transactions from being created for now, until miners and relaying nodes have updated sufficiently. More details can be found in &lt;a href=&quot;https://github.com/namecoin/namecoin-core/pull/322&quot;&gt;#322&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Numerous improvements from upstream Bitcoin Core.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/01/09/namecoin-core-0.19.0.1-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/01/09/namecoin-core-0.19.0.1-released.html</guid>
        
        <category>Releases</category>
        
        <category>Namecoin Core Releases</category>
        
        
      </item>
    
      <item>
        <title>Namecoin&#39;s Jeremy Rand will be at 36C3</title>
        <description>&lt;p&gt;You might have noticed a relative quietness on this news feed and on our social media in the last few months.  If you’re a particularly astute student of history, you might have noticed that something very similar happened around the same time last year, and that this was because Aerth and I were busy cooking up ncp11 for a 35C3 talk and workshop.  If you’ve gotten that far, you might have gone one step further and guessed that something similar is responsible for the quietness this year.  You’d be right!  I (Jeremy Rand) will represent Namecoin at &lt;a href=&quot;https://events.ccc.de/congress/2019/wiki/index.php/Main_Page&quot;&gt;36C3 (the 36th Chaos Communication Congress)&lt;/a&gt; in Leipzig, December 27-30.  (Alas, Jonas and Cassini won’t be there this year.)&lt;/p&gt;

&lt;p&gt;Unfortunately, we’re running &lt;em&gt;very&lt;/em&gt; down to the wire on our content for 36C3.  To the point that we are not yet sure which content we’ll be able to present.  We’re doing everything in our power to try to ensure that we’ll have a kickass talk and workshop ready for you at 36C3, but it is likely that the details will not be finalized until shortly before the Congress begins.  The good news is that this is for a good reason: the content we &lt;em&gt;want&lt;/em&gt; to be able to present at 36C3 is, arguably, even cooler than ncp11 last year.&lt;/p&gt;

&lt;p&gt;Once again, Namecoin will be hosted by the Monero Assembly, which is part of the &lt;a href=&quot;https://decentral.community/&quot;&gt;Critical Decentralization Cluster (CDC)&lt;/a&gt;.  The schedule for CDC events isn’t yet finalized, but keep an eye on &lt;a href=&quot;https://frab.riat.at/en/36C3/public/schedule&quot;&gt;the schedule&lt;/a&gt; for details.  We heard a rumor that talks might get &lt;a href=&quot;https://www.youtube.com/channel/UCKxLNPJeEjPXOke55i5AIXA&quot;&gt;recorded and live-streamed&lt;/a&gt; (for real this time… maybe).  Also thanks go out to our friends at &lt;a href=&quot;https://replicant.us/&quot;&gt;Replicant&lt;/a&gt;, who are facilitating Namecoin’s participation.  We’re looking forward to the Congress!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This news post was edited on December 21 to add additional links.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2019/12/20/36c3.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2019/12/20/36c3.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>DNS Builder GUI for Electrum-NMC</title>
        <description>&lt;p&gt;In November 2017, Brandon posted some WIP code for adding a DNS Builder GUI to Namecoin-Qt.  To refresh your memory, it looked like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/dns-builder-2017-11-19.gif&quot; alt=&quot;A screenshot of the DNS builder for Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, merging that code to Namecoin Core is blocked by several other tasks, so it may be a while before it makes its way into a Namecoin Core release.  However, in the meantime, all is not lost.  Thanks to the magic of Qt GUI’s being in XML format, and therefore easy to port between C++ and Python, I’ve been spending some time porting Brandon’s DNS Builder GUI to Electrum-NMC.&lt;/p&gt;

&lt;p&gt;Things are still a bit rough around the edges, but it’s beginning to take shape.  Check out the below screenshot:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/electrum-nmc/2019-12-02-DNS-Builder.png&quot; alt=&quot;A screenshot of the DNS builder for Electrum-NMC.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So far, the following features work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating and parsing the following record types:
    &lt;ul&gt;
      &lt;li&gt;IPv4 addresses&lt;/li&gt;
      &lt;li&gt;IPv6 addresses&lt;/li&gt;
      &lt;li&gt;Tor onion services&lt;/li&gt;
      &lt;li&gt;I2P eepsites&lt;/li&gt;
      &lt;li&gt;Freenet freesites&lt;/li&gt;
      &lt;li&gt;ZeroNet zites&lt;/li&gt;
      &lt;li&gt;NS delegations&lt;/li&gt;
      &lt;li&gt;DS fingerprints&lt;/li&gt;
      &lt;li&gt;CNAME aliases&lt;/li&gt;
      &lt;li&gt;TLS fingerprints&lt;/li&gt;
      &lt;li&gt;SSH fingerprints&lt;/li&gt;
      &lt;li&gt;TXT records&lt;/li&gt;
      &lt;li&gt;SRV records&lt;/li&gt;
      &lt;li&gt;Domain data imports&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Parsing subdomains (recursively)&lt;/li&gt;
  &lt;li&gt;Creating and sorting subdomains&lt;/li&gt;
  &lt;li&gt;Input validation (only verifying that integer fields are valid integers, and no real-time feedback)&lt;/li&gt;
  &lt;li&gt;Repairing the deprecated forms of Tor and ZeroNet records&lt;/li&gt;
  &lt;li&gt;Size optimizations, e.g. setting &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ip6&quot;&lt;/code&gt; to a string instead of an array containing one string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following features still need implementation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating and parsing the following record types:
    &lt;ul&gt;
      &lt;li&gt;WHOIS info&lt;/li&gt;
      &lt;li&gt;DNAME subtree aliases (not particularly high priority because it’s a footgun)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Editing existing records (this is partially implemented)&lt;/li&gt;
  &lt;li&gt;Deleting existing records&lt;/li&gt;
  &lt;li&gt;More input validation (the sharp-eyed among you probably noticed that it allowed me to enter &lt;code class=&quot;highlighter-rouge&quot;&gt;blah.onion&lt;/code&gt; as a Tor onion service despite that string being invalid), with real-time feedback&lt;/li&gt;
  &lt;li&gt;More friendly guidance for some parameters (e.g. the “Cert. usage”, “Selector”, and “Matching Type” parameters in the TLS tab would probably be more suitable as a drop-down list or combo box)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully this work will improve the UX so that Namecoin domain owners aren’t expected to handle JSON manually.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund and Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2019/12/12/dns-builder-gui-for-electrum-nmc.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2019/12/12/dns-builder-gui-for-electrum-nmc.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Stream Isolation for Namecoin Name Lookups</title>
        <description>&lt;p&gt;The documentation for using Namecoin for name lookups with Tor (via ncprop279) includes a warning about stream isolation.  Specifically, it states that while TCP connections issued by the application (e.g. Tor Browser) will be stream-isolated as usual, stream isolation will &lt;em&gt;not&lt;/em&gt; be applied to whatever network traffic might be induced by the Namecoin lookup.  As a result, our documentation recommends against using Electrum-NMC with ncprop279, since Electrum-NMC will produce network traffic on each lookup.  Our documentation instead recommends Namecoin Core or ConsensusJ-Namecoin’s leveldbtxcache mode, neither of which produce any network traffic per lookup.  However, this situation is non-ideal; Electrum-NMC has some very real advantages, and it’s a shame that we can’t recommend it for this purpose.  Can we do better?&lt;/p&gt;

&lt;p&gt;For background, stream isolation is a little-known but highly important feature in Tor, which prevents different TCP connections from different activities from sharing a single Tor circuit.  Imagine if this weren’t the case.  Keith, who runs an exit relay (or wiretaps one) could easily observe that Ed visited a website of a restaurant in Hawaii, and also visited the website of the WikiLeaks submission system.  Keith doesn’t need to know who Ed is or what his real IP address is; Keith has learned that someone in Hawaii is likely a WikiLeaks source, which is valuable information.  In other words, Ed has only achieved &lt;em&gt;pseudonymity&lt;/em&gt;, i.e. his real name and IP address are hidden, but all of his activities are linkable to a single pseudonym.  Stream isolation unlinks these activities, so that Keith instead sees that someone accessed a Hawaiian restaurant’s website and also sees that someone accessed WikiLeaks’s submission system, but doesn’t have any idea if they are the same person.  Stream isolation enables users to be &lt;em&gt;anonymous&lt;/em&gt; rather than &lt;em&gt;pseudonymous&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;How does stream isolation work in Tor?  Applications can decide which TCP connections can share a circuit without leaking private information, and they communicate this to Tor by setting the SOCKS5 username and password fields.  Tor makes sure that any two TCP connections that have different SOCKS5 username+password values will never share a circuit.  (Technically I’m oversimplifying here; I’ll come back to this.)  So, in order for this to work properly with Namecoin, we need to make sure that the Namecoin software is able to access the SOCKS5 username and password that the application used when talking to Tor, and pass this (or derivative data, see below) through to Tor when Electrum-NMC is doing lookups.  In practice, this means that every piece of software in the chain (starting with Tor’s control port, which talks to StemNS, and ending with aiorpcX, which is the library used by Electrum-NMC to open the TCP connections via Tor’s SOCKS port) must be patched to preserve the SOCKS5 username and password that the application used, and pass it through to the next piece of software in the chain.&lt;/p&gt;

&lt;p&gt;So, let’s look at how we handled this, starting at the end of the chain and working backwards to the beginning.&lt;/p&gt;

&lt;h2 id=&quot;aiorpcx&quot;&gt;aiorpcX&lt;/h2&gt;

&lt;p&gt;aiorpcX is the network library used by Electrum.  It has its own SOCKS5 implementation, which already supports username/password authentication, so you might think there’s nothing to patch here.  However, observing Bitcoin Core’s behavior yields a hint for how we can improve aiorpcX.&lt;/p&gt;

&lt;p&gt;Bitcoin Core (and, by extension, Namecoin Core) open each peer connection using a random SOCKS5 username and password.  The effect is that each peer connection will go over its own Tor circuit.  This has several advantages.  It improves Sybil-resistance (by making it impossible for a single malicious Tor exit relay to control a Bitcoin node’s view of the blockchain).  It also avoids situations where a malicious user gets a Tor exit banned by most of the Bitcoin network, and then other users who end up on that Tor exit can’t connect.  These advantages are beneficial even without worrying about privacy specifically.&lt;/p&gt;

&lt;p&gt;I submitted a patch to aiorpcX that allows applications to request that a random SOCKS5 username+password be used per connection.  This makes things quite a bit cleaner.  The patch has been merged by Neil.&lt;/p&gt;

&lt;h2 id=&quot;electrum-nmc&quot;&gt;Electrum-NMC&lt;/h2&gt;

&lt;p&gt;Patching Electrum-NMC to use the above aiorpcX feature was fairly straightforward.  However, I also needed to add an RPC argument to &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt;, so that the caller can specify a “stream isolation ID”, which has a similar role as the SOCKS5 username+password in the Tor SOCKS port.  Electrum-NMC executes &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; with a different server connection for each unique stream isolation ID that it is passed.&lt;/p&gt;

&lt;p&gt;You may be wondering why we’re not just passing through the stream isolation ID to aiorpcX’s SOCKS5 username; why go through the trouble of randomizing the username and then maintaining a mapping inside Electrum-NMC?  The reason is that Electrum-NMC needs to preemptively open server connections before &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; is called.  Otherwise, each name lookup would be delayed by an Electrum protocol handshake, which would be an unacceptable latency penalty.&lt;/p&gt;

&lt;p&gt;These patches are also useful for non-Namecoin use cases, and accordingly I’ve also sent them upstream to Electrum, where they’re awaiting review.&lt;/p&gt;

&lt;h2 id=&quot;btcd&quot;&gt;btcd&lt;/h2&gt;

&lt;p&gt;btcd is best-known as an alternate implementation of a Bitcoin full node, but it’s also the primary implementation of a Bitcoin RPC client in Go.  Up until recently, ncdns used an ancient 2015 fork of btcd to talk to Namecoin Core and Electrum-NMC.  This fork dealt with the arguments to &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt;.  I wasn’t really fond of piling more and more hacks onto an ancient fork, so I looked into what would be needed to use modern btcd with Namecoin.  There were only 2 features missing from current btcd that we needed: extensible commands (so that we could add &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; as an RPC method) and cookie authentication (so that the user doesn’t need to set up RPC passwords manually).  Both of these were pretty easy to implement, and I’ve sent patches for both to the btcd developers.  They’re both undergoing review.&lt;/p&gt;

&lt;p&gt;With that out of the way, I was able to get the Namecoin &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; command working with current btcd (I’m currently maintaining a fork of btcd until the above 2 patches are merged), via the new &lt;code class=&quot;highlighter-rouge&quot;&gt;ncbtcjson&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ncrpcclient&lt;/code&gt; packages.  These packages now support passing a stream isolation ID to Namecoin Core and Electrum-NMC.  (Namecoin Core ignores it, since it doesn’t generate any network traffic per lookup.)&lt;/p&gt;

&lt;p&gt;I also needed to hack Electrum-NMC a bit to make the new btcd’s stream isolation ID argument work with it.  This is because Electrum, by convention, expects optional arguments to be passed in a slightly different way than Bitcoin Core, and since the stream isolation ID is an optional argument, I needed to rig Electrum-NMC to also recognize the Namecoin Core style.&lt;/p&gt;

&lt;h2 id=&quot;ncdns&quot;&gt;ncdns&lt;/h2&gt;

&lt;p&gt;Rewriting ncdns’s integration with btcd was quite enjoyable, because modern btcd is much simpler to use than the ancient 2015 fork we were using previously.  This meant that I got to rip out quite a lot of code that was no longer needed.  Adding a stream isolation ID argument to ncdns’s lookup code that gets passed through to btcd was pretty easy, but there’s another important thing that was necessary.  ncdns caches responses for performance reasons, and it’s important to isolate the cache based on the stream isolation ID.  So, now ncdns creates a new cache for each new stream isolation ID that it sees.&lt;/p&gt;

&lt;h2 id=&quot;madns&quot;&gt;madns&lt;/h2&gt;

&lt;p&gt;madns is the authoritative DNS library that ncdns uses.  Even though ncprop279 doesn’t include a DNS server, it uses madns to handle various DNS protocol functionality (e.g. wildcard domains) that one would expect a naming system to handle.  Making madns pass a stream isolation ID to ncdns was pretty easy (though it required breaking the madns stable API).  But where would madns get the stream isolation ID from, since usually it receives requests via the DNS wire protocol?&lt;/p&gt;

&lt;p&gt;The solution Hugo and I found was to use EDNS0, which is a protocol extension mechanism in the DNS wire protocol.  I created an EDNS0 extension that allows DNS clients to specify a stream isolation ID; madns then passes it to ncdns.&lt;/p&gt;

&lt;p&gt;This has other interesting implications.  For example, a method of supporting stream isolation in the DNS wire protocol would be interesting to explore for the Tor DNS port, as well as Unbound and other locally-run DNS servers.&lt;/p&gt;

&lt;h2 id=&quot;ncprop279&quot;&gt;ncprop279&lt;/h2&gt;

&lt;p&gt;Modifying ncprop279 to pass a stream isolation ID to madns via EDNS0 was straightforward.  I also had to modify the Prop279 protocol a bit so that ncprop279 knows what stream isolation ID to use.  This was pretty easy.&lt;/p&gt;

&lt;h2 id=&quot;stemns&quot;&gt;StemNS&lt;/h2&gt;

&lt;p&gt;Making StemNS pass a stream isolation ID to ncprop279 was pretty easy.  But how to calculate the stream isolation ID?  Alas, simply using the SOCKS5 username+password wasn’t going to fly.  Remember how I said I was oversimplifying how Tor decides which connections to isolate?  In reality, there are a variety of different data fields associated with a connection made through Tor besides the SOCKS5 username/password.  Other fields that are relevant include the source IP (useful if you have multiple VM’s that access a common Tor instance and you want each VM to be stream-isolated) and the destination IP/port (useful if you have an application that talks to multiple servers via Tor’s Trans port and you want each server to be stream-isolated).  Additionally, Tor can be configured to enable or disable stream isolation for each of these fields independently.  And did I mention that Tor can run multiple listener ports, and each of these ports can have independent stream isolation settings?&lt;/p&gt;

&lt;p&gt;Trying to reliably compress this data into some kind of hash that we could use as a stream isolation ID seemed error-prone, so I instead copied Nick Mathewson’s English description of the logic that Tor itself uses to decide whether two given Tor streams can go over the same circuit, and I made StemNS store the relevant raw data.  StemNS deletes this data every time Tor cycles to a new identity (typically every 10 minutes, though this can vary by settings, and also happens immediately if the user clicks the New Identity button), so it shouldn’t eat up too much memory.  Whenever StemNS finds that a newly requested stream isn’t compatible with any of the streams previously assigned to a stream isolation ID, it makes up a new stream isolation ID and assigns the stream to that one.  Not too bad.&lt;/p&gt;

&lt;h2 id=&quot;tor&quot;&gt;Tor&lt;/h2&gt;

&lt;p&gt;StemNS talks to Tor via the control port protocol.  Unfortunately, quite a few of the relevant fields (including the SOCKS username/password) weren’t actually available via the control port’s &lt;code class=&quot;highlighter-rouge&quot;&gt;STREAM&lt;/code&gt; event, which is the event we need to hook in order to do name resolution.  The control port &lt;em&gt;does&lt;/em&gt; make the SOCKS username/password available via other events, but those events don’t fire until it’s too late to do name resolution.&lt;/p&gt;

&lt;p&gt;So I ended up patching Tor to make all of those fields available over the control port.  Because the control port protocol follows a spec, that also meant patching the spec.  After a few revisions of the spec and code as per review, Nick from Tor merged my patches.  Nightly builds of Tor now support the necessary control port features for StemNS to handle stream isolation properly.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Getting this implemented across the stack was an interesting and nontrivial endeavor, due to the large number of codebases involved, many of which involve third parties.  But I think it was worth it.  New release tags of the relevant codebases will hopefully be coming soon, which means we’ll finally be able to get rid of the scary warning against using Electrum-NMC with ncprop279.  Considering that Electrum-NMC syncs by far the quickest of any Namecoin name lookup client, which is a big deal given Tor’s bandwidth constraints, this is a major UX win.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2019/12/09/stream-isolation-for-namecoin-name-lookups.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2019/12/09/stream-isolation-for-namecoin-name-lookups.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>DNSSEC-HSTS v0.0.2 for Google Chrome Released</title>
        <description>&lt;p&gt;We’ve released DNSSEC-HSTS v0.0.2 for Google Chrome.  v0.0.2 is identical to v0.0.1 except for Chrome-related compatibility fixes; we are therefore not releasing v0.0.2 binaries for Firefox.&lt;/p&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#dnssec-hsts&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2019/11/25/dnssec-hsts-v0.0.2-chrome-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2019/11/25/dnssec-hsts-v0.0.2-chrome-released.html</guid>
        
        <category>Releases</category>
        
        <category>ncdns Releases</category>
        
        
      </item>
    
  </channel>
</rss>
