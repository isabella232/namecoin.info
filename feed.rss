<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Namecoin</title>
    <description><!--Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
--></description>
    <link>https://namecoin.org//</link>
    <atom:link href="https://namecoin.org//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 02 Feb 2019 09:58:56 +0000</pubDate>
    <lastBuildDate>Sat, 02 Feb 2019 09:58:56 +0000</lastBuildDate>
    <generator>Jekyll v3.6.0</generator>
    
      <item>
        <title>Electrum-NMC: Checkpointed AuxPoW Truncation</title>
        <description>&lt;p&gt;I posted previously about &lt;a href=&quot;/2018/11/28/electrum-nmc-checkpoints.html&quot;&gt;auditing Electrum-NMC’s bandwidth usage&lt;/a&gt;.  In that post, I mentioned that there were probably optimizations that could be done to reduce the 3.2 MB per 2016 block headers that get downloaded when looking up a name that’s covered by a checkpoint.  I’ve now implemented one of them: AuxPoW truncation.&lt;/p&gt;

&lt;p&gt;Some background: AuxPoW (auxilliary proof of work) is the portion of Namecoin block headers that allows clients to verify that the PoW expended by miners on the parent chain (usually Bitcoin) applies to Namecoin as well.  As a result, SPV clients such as Electrum-NMC (which verify PoW) need to download the AuxPoW data.  However, the AuxPoW data in a Namecoin block header &lt;em&gt;does not contribute to the block hash&lt;/em&gt;.  As a result, the commitment in a Namecoin block header to the previous block header can be verified without having access to any AuxPoW data.&lt;/p&gt;

&lt;p&gt;Why does this matter?  AuxPoW is by far the largest part of a Namecoin block header, because it contains a coinbase transaction from the parent chain.  Coinbase transactions can frequently be quite large, especially if the parent block is mined by a mining pool that’s paying a large number of miners via the coinbase transaction.  If we can omit the AuxPoW data from Namecoin block headers, then that saves a lot of bytes.&lt;/p&gt;

&lt;p&gt;Obviously, we can’t get rid of the AuxPoW data completely, since SPV validation requires PoW verification.  But not all blocks are verified via SPV – blocks that are covered by a checkpoint don’t need to have their PoW checked, since the checkpoint implies validity.  So, we can simply not check the AuxPoW for any blocks that are committed to by a checkpoint.  And if we don’t need to check the AuxPoW for such blocks, we don’t need to download it either.&lt;/p&gt;

&lt;p&gt;Conveniently, the Electrum protocol includes a feature that allows the client to tell the server what height its checkpoint is set to.  This feature isn’t actually used yet in the Electrum client, but we can use that feature to have Electrum-NMC tell ElectrumX what height its checkpoint is set to, such that ElectrumX will then truncate AuxPoW data from the block headers it responds with.  I’ve submitted a PR for ElectrumX that does exactly that: with this PR, ElectrumX truncates AuxPoW data from block headers when the client supplies a checkpoint height that is higher than the height of the block header.  Neil from ElectrumX has already merged my PR; once it’s in a tagged release, I’ll push the relevant changes to Electrum-NMC as well.&lt;/p&gt;

&lt;p&gt;What does the data transfer look like now?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before: 3.2 MB per 2016 headers&lt;/li&gt;
  &lt;li&gt;After: 323 KB per 2016 headers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So that’s roughly a 90% reduction.  Not bad.  There are probably some additional optimizations that can still be done, but those will have to wait for another day.&lt;/p&gt;

&lt;p&gt;This work was funded by Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2019/02/02/electrum-nmc-checkpointed-auxpow-truncation.html</link>
        <guid isPermaLink="true">https://namecoin.org//2019/02/02/electrum-nmc-checkpointed-auxpow-truncation.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Internet Governance Forum 2018 Summary</title>
        <description>&lt;p&gt;As was &lt;a href=&quot;/2018/11/09/internet-governance-forum-2018.html&quot;&gt;previously announced&lt;/a&gt;, I (Jeremy Rand) represented Namecoin at &lt;a href=&quot;https://www.intgovforum.org/multilingual/&quot;&gt;Internet Governance Forum 2018&lt;/a&gt; in Paris.&lt;/p&gt;

&lt;p&gt;My panel at IGF (moderated by Chiara Petrioli from Università degli Studi di Roma La Sapienza) went reasonably well, and a quite diverse set of perspectives were represented.  I suspect that a lot of the attendees had never been exposed to the cypherpunk philosophy of “trusted third parties are security holes” (credit to Nick Szabo for that phrasing), and I hope I did a good job of providing that exposure so that maybe we’ll have some new allies.  As with ICANN58, I continued my adherence to the Fluffypony way of answering questions: don’t hype things, and always be quick to admit disadvantages.  This worked well at ICANN, and I think it worked well at IGF.  (Special thanks to the guy from Verisign who asked a question in the Q&amp;amp;A that will shortly be immortalized in the Namecoin.org FAQ!)&lt;/p&gt;

&lt;p&gt;IGF has published a &lt;a href=&quot;https://www.intgovforum.org/multilingual/content/igf-2018-day-1-salle-vi-ws408-dns-enhancements-and-alternatives-for-the-future-internet&quot;&gt;transcript&lt;/a&gt;[1], a &lt;a href=&quot;https://www.youtube.com/watch?v=WyTNAXdd7Qc&amp;amp;pbjreload=10&quot;&gt;video recording&lt;/a&gt;, and a &lt;a href=&quot;https://www.intgovforum.org/multilingual/content/igf-2018-ws-408-dns-enhancements-and-alternatives-for-the-future-internet&quot;&gt;report&lt;/a&gt;.  The transcript and report should work fine in Tor Browser at High Security settings; the video recording can be viewed via &lt;a href=&quot;https://rg3.github.io/youtube-dl/&quot;&gt;youtube-dl&lt;/a&gt; (&lt;a href=&quot;https://packages.debian.org/stretch/youtube-dl&quot;&gt;Debian package&lt;/a&gt;) (&lt;a href=&quot;https://forums.whonix.org/t/vlc-apparmor-profile-wip-streaming-documentation-for-whonix-install-youtube-dl-by-default/2918&quot;&gt;recommendation by Whonix&lt;/a&gt;) if you don’t trust YouTube’s JavaScript (and there’s no reason why you should trust YouTube’s JavaScript!).  I’ve also posted &lt;a href=&quot;/resources/presentations/IGF_2018/Namecoin_IGF_2018.pdf&quot;&gt;my slides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next day, I was on a panel hosted by Jean-Christophe Finidori.  This one was a bit more in my comfort zone, as the attendees were mostly blockchain enthusiasts, and there were a lot of quite sophisticated questions about the details of Namecoin’s design.  Unfortunately, I’m not aware of any recordings of this event.&lt;/p&gt;

&lt;p&gt;Of course, I had lots of other meetings while I was in Paris, but as usual, I won’t be publicly disclosing the content of those conversations, because I want people to be able to talk to me at conferences without worrying that off-the-cuff comments will be broadcast to the public.  That said, the result of one of those conversations is likely to be posted very soon.&lt;/p&gt;

&lt;p&gt;Thanks to Chiara and Jean-Christophe for inviting me; I enjoyed visiting Paris!&lt;/p&gt;

&lt;p&gt;[1] Reading the official transcript makes me realize how lucky I am that I’m not hearing-impaired.  Hearing-impaired people are going to have a miserable time trying to understand the transcript.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2019/01/30/internet-governance-forum-2018-summary.html</link>
        <guid isPermaLink="true">https://namecoin.org//2019/01/30/internet-governance-forum-2018-summary.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin's Jeremy Rand and Jonas Ostman will be at 35C3</title>
        <description>&lt;p&gt;You might have noticed that we’ve been a bit quiet on this news feed as well as social media for the last month.  Not to worry, there’s a reason: same as last year, I (Jeremy Rand) and Jonas Ostman will represent Namecoin at &lt;a href=&quot;https://events.ccc.de/congress/2018/wiki/index.php/Main_Page&quot;&gt;35C3 (the 35th Chaos Communication Congress)&lt;/a&gt; in Leipzig, December 27-30.  And this time, our R&amp;amp;D lab has been very busy cooking up some cool stuff for 35C3, which is why we haven’t posted much in the last month.&lt;/p&gt;

&lt;p&gt;Once again, we’ll be hosted by the Monero Assembly.  The schedule for Monero Assembly events isn’t yet finalized, but keep an eye on &lt;a href=&quot;https://frab.riat.at/en/35C3/public/schedule&quot;&gt;the schedule&lt;/a&gt; for details.  We heard a rumor that talks might get recorded and live-streamed.  We’re looking forward to the Congress!&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/12/22/35c3.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/12/22/35c3.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC v3.2.4b1 Beta Released</title>
        <description>&lt;p&gt;We’ve released Electrum-NMC v3.2.4b1.  This is a beta release (even more so than the other downloads on the Beta Downloads page); expect a higher risk of bugs than usual.  (As one example of a bug due to it being a beta, it doesn’t build for Windows without errors, so this release is for GNU/Linux users only.)  Here’s what’s new:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Name support.&lt;/li&gt;
  &lt;li&gt;Checkpoint at height 385055.&lt;/li&gt;
  &lt;li&gt;Fix macOS build issue.&lt;/li&gt;
  &lt;li&gt;Code quality improvements.&lt;/li&gt;
  &lt;li&gt;From upstream Electrum: the Safe-T mini hardware wallet from Archos is now supported.&lt;/li&gt;
  &lt;li&gt;Other improvements from upstream Electrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#electrum-nmc&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund and Cyphrs.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/12/21/electrum-nmc-v3.2.4b1-beta-released.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/12/21/electrum-nmc-v3.2.4b1-beta-released.html</guid>
        
        <category>Releases</category>
        
        <category>Electrum Releases</category>
        
        
      </item>
    
      <item>
        <title>ElectrumX v1.8.8 Released by Upstream, Includes Name Script Support</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/kyuupichan/electrumx&quot;&gt;Upstream ElectrumX&lt;/a&gt; has released v1.8.8, which includes &lt;a href=&quot;/2018/10/25/electrumx-name-scripts-merged.html&quot;&gt;name script support&lt;/a&gt;.  (ElectrumX then subsequently released some other minor revisions, which seem to mostly be bug fixes; the latest release is currently v1.8.12.)  If you run a Namecoin ElectrumX server, please consider upgrading to the latest ElectrumX release so that your users will be able to use name scripts.&lt;/p&gt;

&lt;p&gt;(And a reminder that we need more ElectrumX instances… please consider running one if you have a server with spare resources!)&lt;/p&gt;

&lt;p&gt;This work was funded by Cyphrs and NLnet Foundation’s Internet Hardening Fund.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/12/07/electrumx-v1.8.8-released.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/12/07/electrumx-v1.8.8-released.html</guid>
        
        <category>Releases</category>
        
        <category>Electrum Releases</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC: Checkpoints</title>
        <description>&lt;p&gt;I decided to spend some time auditing Electrum-NMC’s bandwidth usage, to see if any optimizations were possible and/or needed.  Using the excellent &lt;a href=&quot;https://github.com/raboof/nethogs&quot;&gt;nethogs&lt;/a&gt; tool by Arnout Engelen, I determined that Electrum-NMC’s initial syncup downloads 672 MB, which is quite a lot.  Clearly some optimizations would be highly welcome.&lt;/p&gt;

&lt;p&gt;Upstream Electrum avoids downloading most of the Bitcoin blockchain’s headers via checkpoints.  Basically, a checkpoint consists of a hardcoded block hash (and a difficulty target), specifically one for each difficulty retargeting period (2016 blocks).  Electrum doesn’t typically download any headers that are between two checkpoints; instead it only downloads such headers if it needs to verify a transaction from one of those blocks.  This reduces bandwidth usage considerably.  Electrum’s debug console can generate a checkpoint file (assuming that you’re connected to a trustworthy ElectrumX server; I’m using my own ElectrumX server connected to my own Namecoin Core node, so my server is indeed trustworthy to me).  Electrum-NMC hadn’t yet gotten around to setting any checkpoints, due to it being a lower priority than getting name transactions working.  But now that name transactions pretty much work, I was able to try out checkpoints.&lt;/p&gt;

&lt;p&gt;Interestingly, after I set checkpoints through about 38 kiloblocks ago (more on why I chose that below), Electrum-NMC started reporting blockchain validation errors, most of which seemed to be related to missing headers.  After quite a bit of debugging, I figured out why this was happening: in Bitcoin, calculating the new difficulty target requires some information from the first and last block header for a given retargeting period.  Electrum’s checkpoints supply this information.  However, this is actually not mathematically correct behavior, and exposes the blockchain to what’s called a &lt;em&gt;timewarp attack&lt;/em&gt;.  A timewarp attack can only be successfully pulled off by an attacker who can already do a 51% attack, so the attack is difficult, but if it’s successfully done, the attacker can make the difficulty continually drop, thus allowing them to mint more coins than the expected subsidy per 2 weeks.  Because a timewarp attack is difficult to pull off, and because fixing it constitutes a hardfork, Bitcoin never actually fixed that vulnerability.  Namecoin, however, did fix it, at the same time that we hardforked to enable merged mining.  How does the timewarp fix work?  Well, it actually needs a block header from the &lt;em&gt;previous&lt;/em&gt; retargeting period in order to calculate the new target.  Guess what, Electrum’s checkpoints do not supply such information (which would be useless in Bitcoin).  And thus, the target calculation code in Electrum-NMC was complaining that the header from the previous retargeting period wasn’t present.&lt;/p&gt;

&lt;p&gt;After quite a bit of trying to find a way to solve the issue without highly invasive changes, I eventually stumbled on an easy hack.  I did a one-line change of the code that reports the number of checkpoints available, so that if &lt;em&gt;n&lt;/em&gt; checkpoints exist, Electrum-NMC calculates the block height to download under the impression that &lt;em&gt;n-1&lt;/em&gt; checkpoints exist.  This means that Electrum-NMC will actually download the final checkpoint’s set of 2016 block headers before it moves on to the uncheckpointed headers.  As a result, it actually &lt;em&gt;will&lt;/em&gt; have the previous retargeting period’s headers available when it tries to calculate the new difficulty target.  It’s a stupid hack, but it definitely seems to work.&lt;/p&gt;

&lt;p&gt;So, with checkpoints set through 38 kiloblocks ago, I measured Electrum-NMC’s bandwidth usage with nethogs again, and this time it had dropped to 66 MB of downloaded data.  Not bad!&lt;/p&gt;

&lt;p&gt;But why did I set the last checkpoint at 38 kiloblocks ago?  Well, if we’re doing name lookups, we always want to have block headers for the last 36 kiloblocks, since unexpired names could be anywhere within that range.  As an experiment, I tried setting a checkpoint at circa 3 kiloblocks ago, and found that Electrum-NMC’s bandwidth usage dropped to 4.9 MB of downloaded data during initial syncup.  However, trying to do a name lookup resulted in a “missing header” error.  Not much of a surprise there.  However, upstream Electrum handles this situation just fine when verifying currency transactions – if you try to verify a currency transaction that’s behind a checkpoint, Electrum just downloads the necessary headers before trying to verify it.  I quickly figured out where that code was, and adapted it to work with the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; console command.  With this change, if a name is behind a checkpoint, the lookup succeeds – but if you haven’t already downloaded the relevant headers, Electrum-NMC downloads 2016 headers (about 3.2 MB according to nethogs) before verifying the name.&lt;/p&gt;

&lt;p&gt;For now, I don’t intend to put checkpoints beyond 38 kiloblocks ago into Electrum-NMC, because downloading 3.2 MB to do a lookup adds noticeable delay.  There are probably some ways this amount of data can be optimized significantly, but that’ll have to wait for another day.  That said, 66 MB instead of 672 MB is pretty nice savings.&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund.&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/11/28/electrum-nmc-checkpoints.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/11/28/electrum-nmc-checkpoints.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>ConsensusJ WalletAppKit Support Merged by Upstream; ConsensusJ-Namecoin v0.3.2.1 Released</title>
        <description>&lt;p&gt;One of the main reasons that ConsensusJ-Namecoin is still in the &lt;a href=&quot;/download/betas/&quot;&gt;Beta Downloads section&lt;/a&gt; of Namecoin.org is that it carries several patches against upstream ConsensusJ that haven’t yet been upstreamed.  This presents two resultant issues:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;There are fewer eyes on the ConsensusJ-Namecoin code.&lt;/li&gt;
  &lt;li&gt;ConsensusJ-Namecoin takes some extra time to benefit from new code from upstream, because I need to manually rebase against that new code (and fix whatever conflicts might show up).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these issues reduces the security of ConsensusJ-Namecoin, which means we should fix them by getting our patches upstreamed.  We’ve been making some progress on this recently, and last month we saw some additional progress, as I’ve submitted the WalletAppKit support from ConsensusJ-Namecoin to upstream, and upstream has merged it.  &lt;em&gt;Mommy, what’s a WalletAppKit?&lt;/em&gt;  The BitcoinJ library, on which ConsensusJ is based, includes quite a few different modes of operation.  The most well-known mode is a mode that downloads blockchain headers and does SPV validation of them.  A lesser-known mode simply opens P2P connections to other Bitcoin nodes and lets the user figure out what to do with those P2P connections.  The latter mode (known as PeerGroup) is utilized as a component of the former mode (known as WalletAppKit).  Prior to my pull request, upstream ConsensusJ’s daemons (&lt;code class=&quot;highlighter-rouge&quot;&gt;bitcoinj-daemon&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;namecoinj-daemon&lt;/code&gt;) used PeerGroup mode, and simply assumed (for the purposes of the &lt;code class=&quot;highlighter-rouge&quot;&gt;bitcoind&lt;/code&gt;-style RPC API) that the peers they’ve connected to are telling the truth.  ConsensusJ-Namecoin, meanwhile, uses WalletAppKit mode, so that we can be reasonably confident (within SPV’s threat model [1]) that the name transactions we’re given are actually from the chain with the most work.&lt;/p&gt;

&lt;p&gt;As expected, upstream ConsensusJ developer Sean Gilligan noticed some things that could be improved as part of the code review process (which is exactly why we want to get this stuff upstreamed).  I made the relevant changes, and the code is merged.  Now that WalletAppKit is merged, the most likely next candidate for upstreaming will be the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; RPC call, and associated backend code.  It’s likely that the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; upstreaming will focus on &lt;code class=&quot;highlighter-rouge&quot;&gt;leveldbtxcache&lt;/code&gt; mode, for a few reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leveldbtxcache&lt;/code&gt; mode is by far the most secure SPV mode for Namecoin name lookups (substantially more secure than any SPV clients that exist in the Bitcoin world).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leveldbtxcache&lt;/code&gt; mode has much faster lookups than the other &lt;code class=&quot;highlighter-rouge&quot;&gt;libdohj-namecoin&lt;/code&gt; name lookup methods, which use an API server.&lt;/li&gt;
  &lt;li&gt;The API server that &lt;code class=&quot;highlighter-rouge&quot;&gt;libdohj-namecoin&lt;/code&gt; uses by default when not in &lt;code class=&quot;highlighter-rouge&quot;&gt;leveldbtxcache&lt;/code&gt; mode is WebBTC, which has been down for maintenance for quite a while.  Also, WebBTC is problematic due to its lack of consensus safety (it re-implements the consensus rules instead of relying on Namecoin Core’s consensus implementation, and this has caused it to chainfork from the Bitcoin chain before).&lt;/li&gt;
  &lt;li&gt;The API-server security model isn’t actually a bad one (it’s a lot easier to Sybil the P2P network than to impersonate an API server), but I tend to think that Electrum is a better (and more standardized) approach to the API-server security model than the &lt;code class=&quot;highlighter-rouge&quot;&gt;libdohj-namecoin&lt;/code&gt; implementation.  It’s conceivable that we could combine the two approaches in the future (maybe make &lt;code class=&quot;highlighter-rouge&quot;&gt;libdohj-namecoin&lt;/code&gt; query an Electrum instance in addition to the P2P network?), but this is not exactly a high priority for our R&amp;amp;D budget given that &lt;code class=&quot;highlighter-rouge&quot;&gt;leveldbtxcache&lt;/code&gt; mode isn’t in any immediate danger of encountering scaling problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hopefully we’ll see more progress on this front in the near future.  In the meantime, I’ve released ConsensusJ-Namecoin v0.3.2.1 (on the &lt;a href=&quot;/download/betas/#consensusj-namecoin&quot;&gt;Beta Downloads&lt;/a&gt; page as usual), which incorporates the latest improvements from upstream ConsensusJ (including Sean’s code review of my WalletAppKit support).&lt;/p&gt;

&lt;p&gt;This work was funded by NLnet Foundation’s Internet Hardening Fund.&lt;/p&gt;

&lt;p&gt;[1] The SPV threat model makes a security assumption that the chain with the most work is also a valid chain.  This is, of course, not guaranteed to be a correct assumption, although there are some game-theoretic reasons to believe that as long as an economically strong fraction of the network is using full nodes, then SPV is safe for everyone else.  You should definitely run a full node for your Namecoin resolution if you have the ability to do so; you’ll be more secure yourself, and you’ll also be making the network more secure for anyone who’s using an SPV node.&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/11/24/consensusj-walletappkit-merged-upstream-v0.3.2.1-released.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/11/24/consensusj-walletappkit-merged-upstream-v0.3.2.1-released.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin's Jeremy Rand will be a speaker at Internet Governance Forum 2018</title>
        <description>&lt;p&gt;I (Jeremy Rand) will be a speaker at &lt;a href=&quot;https://www.intgovforum.org/multilingual/&quot;&gt;Internet Governance Forum 2018&lt;/a&gt;, November 12 - November 14, in Paris (chartered by the UN and hosted at the UNESCO headquarters).  I’ll be speaking on the &lt;a href=&quot;https://www.intgovforum.org/multilingual/content/igf-2018-ws-408-dns-enhancements-and-alternatives-for-the-future-internet&quot;&gt;“DNS enhancements and alternatives for the Future Internet” panel&lt;/a&gt; at 9:00 AM - 10:30 AM (local time) on Monday, November 12.  Huge thanks to Chiara Petrioli from Università degli Studi di Roma La Sapienza for inviting me!&lt;/p&gt;

&lt;p&gt;While I’m in Paris, I’ll also be on an &lt;a href=&quot;https://www.eventbrite.com/e/internet-of-trust-tickets-51945113232?aff=ebdssbdestsearch&quot;&gt;“Internet of Trust” panel&lt;/a&gt; at 6:30 PM - 8:30 PM (local time) on Tuesday, November 13, hosted by Jean-Christophe Finidori.  Thanks to Jean-Christophe for inviting me!&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/11/09/internet-governance-forum-2018.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/11/09/internet-governance-forum-2018.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Decentralized Web Summit 2018 Summary</title>
        <description>&lt;p&gt;As was &lt;a href=&quot;/2018/07/23/decentralized-web-summit-2018.html&quot;&gt;previously announced&lt;/a&gt;, I (Jeremy Rand) represented Namecoin at &lt;a href=&quot;https://decentralizedweb.net/&quot;&gt;Decentralized Web Summit 2018&lt;/a&gt; in San Francisco.&lt;/p&gt;

&lt;p&gt;This time, the focus of my attendance was less on giving talks and more about talking with other attendees about possible collaborations.  As usual, I won’t be publicly disclosing the content of those conversations, because I want people to be able to talk to me at conferences without worrying that off-the-cuff comments will be broadcast to the public.&lt;/p&gt;

&lt;p&gt;That said, I did give a lightning talk.  You can view the &lt;a href=&quot;https://decentralizedweb.net/videos/lightning-talks-new-discoveries-session-1/&quot;&gt;official recording page&lt;/a&gt; (JavaScript required, yuck!), or you can view &lt;a href=&quot;https://ia801508.us.archive.org/11/items/dweb-8_1_18_HyperRoom_lightningTalksNewDiscoveries-1/8_1_18_HyperRoom_lightning%20Talks%20New%20Discoveries-1.mp4&quot;&gt;the video file itself&lt;/a&gt; (no JavaScript required; my lightning talk is at 24:15 - 32:08).&lt;/p&gt;

&lt;p&gt;Thanks to Internet Archive for inviting me, we’re looking forward to the next event!&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/11/02/decentralized-web-summit-2018-summary.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/11/02/decentralized-web-summit-2018-summary.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>New York Times' Allegation of Saudi Intelligence Targeting Namecoin Developer Is Consistent with 2013 Reporting by Moxie Marlinspike</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.nytimes.com/2018/10/20/us/politics/saudi-image-campaign-twitter.html&quot;&gt;The New York Times published what appears to be a highly interesting scoop&lt;/a&gt; on October 20, 2018.  The New York Times article alleges that the government behind the State Sponsored Actors attack on circa 40 Twitter users (most of whom, including me, were free software developers and privacy activists) was none other than Saudi Arabia.  Those of us who were &lt;a href=&quot;https://www.state-sponsored-actors.org/&quot;&gt;notified of the attack in 2015&lt;/a&gt; have been trying to find out more ever since, with no luck until now.&lt;/p&gt;

&lt;p&gt;As a precaution against censorship risk, the relevant subsection of the article is reproduced below:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A Suspected Mole Inside Twitter&lt;/p&gt;

  &lt;p&gt;Twitter executives first became aware of a possible plot to infiltrate user accounts at the end of 2015, when Western intelligence officials told them that the Saudis were grooming an employee, Ali Alzabarah, to spy on the accounts of dissidents and others, according to five people briefed on the matter. They requested anonymity because they were not authorized to speak publicly.&lt;/p&gt;

  &lt;p&gt;Mr. Alzabarah had joined Twitter in 2013 and had risen through the ranks to an engineering position that gave him access to the personal information and account activity of Twitter’s users, including phone numbers and I.P. addresses, unique identifiers for devices connected to the internet.&lt;/p&gt;

  &lt;p&gt;The intelligence officials told the Twitter executives that Mr. Alzabarah had grown closer to Saudi intelligence operatives, who eventually persuaded him to peer into several user accounts, according to three of the people briefed on the matter.&lt;/p&gt;

  &lt;p&gt;Caught off guard by the government outreach, the Twitter executives placed Mr. Alzabarah on administrative leave, questioned him and conducted a forensic analysis to determine what information he may have accessed. They could not find evidence that he had handed over Twitter data to the Saudi government, but they nonetheless fired him in December 2015.&lt;/p&gt;

  &lt;p&gt;Mr. Alzabarah returned to Saudi Arabia shortly after, taking few possessions with him. He now works with the Saudi government, a person briefed on the matter said.&lt;/p&gt;

  &lt;p&gt;A spokesman for Twitter declined to comment. Mr. Alzabarah did not respond to requests for comment, nor did Saudi officials.&lt;/p&gt;

  &lt;p&gt;On Dec. 11, 2015, Twitter sent out safety notices to the owners of a few dozen accounts Mr. Alzabarah had accessed. Among them were security and privacy researchers, surveillance specialists, policy academics and journalists. A number of them worked for the Tor project, an organization that trains activists and reporters on how to protect their privacy. Citizens in countries with repressive governments have long used Tor to circumvent firewalls and evade government surveillance.&lt;/p&gt;

  &lt;p&gt;“As a precaution, we are alerting you that your Twitter account is one of a small group of accounts that may have been targeted by state-sponsored actors,” the emails from Twitter said.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before I go any further, it’s important to remember that the New York Times’s source for these claims appears to be anonymous intelligence officials, and caution is warranted when evaluating claims by anonymous intelligence officials (&lt;em&gt;cough cough Iraq cough cough&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;That said, let’s assume for the purpose of argument that the New York Times’s allegation is correct, and Saudi Arabia was behind the attack.  What’s the motive?  It’s certainly plausible that Saudi Arabia would have an interest in Tor developers, but how did I get targeted?  Between 2013 and 2015 (when Alzabarah allegedly worked at Twitter), there were three main things I was spending my time on:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Console game hacking research for my undergraduate honors thesis.  Highly unlikely that Saudi Arabia would care about this.&lt;/li&gt;
  &lt;li&gt;Machine learning, ranking, and privacy research for the YaCy search engine, which would later evolve into my master’s thesis.  I suppose it’s technically possible that Saudi Arabia would find this interesting (since censorship resistance and privacy are known to annoy the Saudi government), but this work was relatively low-profile (it was only discussed within my classes at my university, a couple of IRC channels with small audiences, and a couple of posts on the YaCy forum).  Furthermore, no code was publicly available during this time period (which probably decreased any possible Saudi interest), and YaCy was simply too immature to credibly be considered a threat at that time (and probably even now).&lt;/li&gt;
  &lt;li&gt;TLS PKI research for Namecoin.  Specifically, my fork of Moxie Marlinspike’s Convergence (a tool for customizing TLS certificate validation in Firefox) was created in 2013, my TLS PKI research with Namecoin continued through the present day, and this research received a decent amount of public attention (including being presented at a poster session at Google’s New York office in 2013, and being the subject of a fundraising campaign in 2014).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Yeah, about that last one.  It’s pretty clearly the one that would be most likely to attract attention from a state-sponsored actor (since it prevents state actors from compromising TLS certificate authorities in order to intercept encrypted communications), but why Saudi Arabia?  I had been previously speculating that the involved state might be Iran, seeing as they’ve been publicly accused of compromising TLS certificate authorities in the past.  I was not aware of any similar cases where Saudi Arabia was caught doing this.&lt;/p&gt;

&lt;p&gt;However, then I ran across &lt;a href=&quot;https://moxie.org/blog/saudi-surveillance/&quot;&gt;a highly interesting article from the aforementioned Moxie Marlinspike&lt;/a&gt; dated May 13, 2013.  Again, as a precaution against censorship risk, the relevant parts are reproduced below:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Last week I was contacted by an agent of Mobily, one of two telecoms operating in Saudi Arabia, about a surveillance project that they’re working on in that country. Having published two reasonably popular MITM tools, it’s not uncommon for me to get emails requesting that I help people with their interception projects. I typically don’t respond, but this one (an email titled “Solution for monitoring encrypted data on telecom”) caught my eye.&lt;/p&gt;

  &lt;p&gt;I was interested to know more about what they were up to, so I wrote back and asked. After a week of correspondence, I learned that they are organizing a program to intercept mobile application data, with specific interest in monitoring:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Mobile Twitter&lt;/li&gt;
    &lt;li&gt;Viber&lt;/li&gt;
    &lt;li&gt;Line&lt;/li&gt;
    &lt;li&gt;WhatsApp&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;I was told that the project is being managed by Yasser D. Alruhaily, Executive Manager of the Network &amp;amp; Information Security Department at Mobily. The project’s requirements come from “the regulator” (which I assume means the government of Saudi Arabia). The requirements are the ability to both monitor and block mobile data communication, and apparently they already have blocking setup.&lt;/p&gt;

  &lt;p&gt;[snip]&lt;/p&gt;

  &lt;p&gt;One of the design documents that they volunteered specifically called out compelling a CA in the jurisdiction of the UAE or Saudi Arabia to produce SSL certificates that they could use for interception.&lt;/p&gt;

  &lt;p&gt;[snip]&lt;/p&gt;

  &lt;p&gt;Their level of sophistication didn’t strike me as particularly impressive, and their existing design document was pretty confused in a number of places, but Mobily is a company with over 5 billion in revenue, so I’m sure that they’ll eventually figure something out.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, let’s look at some things that I found notable about this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Saudi Arabia &lt;strong&gt;was&lt;/strong&gt; interested in doing TLS interception via a malicious CA.  There’s your motive.&lt;/li&gt;
  &lt;li&gt;The email exchange between Mobily and Moxie about interest in doing TLS interception was in 2013, the same year that Alzabarah allegedly began working for Twitter.&lt;/li&gt;
  &lt;li&gt;I don’t know how long it’s expected to take a “confused” and “[not] particularly impressive” development team at a well-funded telecom to design TLS interception infrastructure, but it seems totally plausible that this Mobily project, or related projects at other Saudi telecoms or the Saudi government, continued through a significant portion of Alzabarah’s alleged employment at Twitter, possibly as late as when Alzabarah allegedly obtained access to user data in his engineering position at Twitter.&lt;/li&gt;
  &lt;li&gt;Moxie is the original author of Convergence, but stopped maintaining it in 2012.  My fork was created in 2013, and by 2014 my fork was the only maintained fork (after Mike Kazantsev stopped maintaining his Convergence-Extra fork).  So anyone who was interested in Moxie’s work with TLS may very well have also been aware of me.&lt;/li&gt;
  &lt;li&gt;Surveillance of Twitter is specifically mentioned in the email exchange between Mobily and Moxie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, as far as I can tell, the New York Times’s allegation that Saudi intelligence targeted my Twitter account seems to be quite consistent with the 2013 reporting by Moxie.&lt;/p&gt;

&lt;p&gt;That said, there is an unexplained loose end.  Most major browsers implemented TLS certificate pinning since 2013, and certificate pinning would probably have made it quite obvious if Saudi Arabia were using rogue TLS certificates to intercept communications with a large site like Twitter.  Ditto for certificate transparency.  So, even if Saudi intelligence was pursuing this project in 2013, it would be surprising if they’re still doing so.&lt;/p&gt;

&lt;p&gt;If anyone has further information about the State Sponsored Actors attack, I strongly encourage you to share it with journalists.  In particular, anonymously sending primary source documents to WikiLeaks would be a highly beneficial action.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
        <link>https://namecoin.org//2018/11/01/nytimes-allegation-saudi-targeting-namecoin-moxie.html</link>
        <guid isPermaLink="true">https://namecoin.org//2018/11/01/nytimes-allegation-saudi-targeting-namecoin-moxie.html</guid>
        
        <category>News</category>
        
        
      </item>
    
  </channel>
</rss>
